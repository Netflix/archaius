// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories { mavenCentral() }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { mavenCentral() }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

subprojects {
    group = "com.netflix.${githubProjectName}" 

    apply plugin: 'java'
    tasks.withType(Test) { forkEvery = 1 }
}

project(':archaius-core') {
    dependencies {
        compile 'commons-configuration:commons-configuration:1.8'
        compile 'org.slf4j:slf4j-api:1.6.4'
        testCompile 'junit:junit:4.10'
        testCompile 'org.apache.derby:derby:10.8.2.2'
        testCompile('log4j:log4j:1.2.15') {
            exclude group: 'javax.jms', module: 'jms'
            exclude group: 'com.sun.jdmk', module: 'jmxtools'
            exclude group: 'com.sun.jmx', module: 'jmxri'
        }
    }
}

project(':archaius-aws') {
    dependencies {
        compile project(':archaius-core')
        compile 'com.amazonaws:aws-java-sdk:1.3.22'
        testCompile 'junit:junit:4.10'
        testCompile 'org.slf4j:slf4j-simple:1.6.4'
        testCompile('log4j:log4j:1.2.15') {
            exclude group: 'javax.jms', module: 'jms'
            exclude group: 'com.sun.jdmk', module: 'jmxtools'
            exclude group: 'com.sun.jmx', module: 'jmxri'
        }
    }
}

project(':archaius-jclouds') {
    dependencies {
        compile project(':archaius-core')
        compile 'org.jclouds:jclouds-blobstore:1.5.3'
        testCompile 'junit:junit:4.10'
        testCompile 'org.slf4j:slf4j-simple:1.6.4'
        testCompile('log4j:log4j:1.2.15') {
            exclude group: 'javax.jms', module: 'jms'
            exclude group: 'com.sun.jdmk', module: 'jmxtools'
            exclude group: 'com.sun.jmx', module: 'jmxri'
        }
    }
}

project(':archaius-scala') {
    apply plugin: 'scala'

    dependencies {
        // Libraries needed to run the scala tools
        scalaTools 'org.scala-lang:scala-compiler:2.9.1-1'
        scalaTools 'org.scala-lang:scala-library:2.9.1-1'

        compile project(':archaius-core')
        compile 'org.scala-lang:scala-library:2.9.1-1'
        testCompile 'org.scalatest:scalatest_2.9.1:1.8'
    }
}


project(':archaius-samplelibrary') {
    dependencies {
        compile 'commons-configuration:commons-configuration:1.8'
        compile 'org.slf4j:slf4j-api:1.6.4'
        testCompile 'junit:junit:4.10'
        testCompile('log4j:log4j:1.2.15') {
            exclude group: 'javax.jms', module: 'jms'
            exclude group: 'com.sun.jdmk', module: 'jmxtools'
            exclude group: 'com.sun.jmx', module: 'jmxri'
        }
    }
    jar {
        from('src/main/java') {
            include 'META-INF/conf/springbeans.xml'
            include 'META-INF/conf/config.properties'
        }
    }
}

