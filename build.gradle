apply plugin: 'nebula'

buildscript {
  repositories {
    maven {
      url = uri("https://plugins.gradle.org/m2/")
    }
  }
  dependencies {
    classpath("com.netflix.nebula:gradle-netflixoss-project-plugin:11.2.0")
    classpath("com.netflix.nebula:gradle-extra-configurations-plugin:7.0.0")
  }
}

// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

allprojects {
    apply plugin: 'nebula.netflixoss'
    //apply plugin: 'nebula.provided-base'
    apply plugin: 'java-library'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
    }
    dependencies {
        api 'com.google.code.findbugs:jsr305:3.0.1'
        api 'org.slf4j:slf4j-api:1.7.36'
        api 'commons-configuration:commons-configuration:1.10'
        testImplementation('ch.qos.reload4j:reload4j:1.2.25')
    }
    group = "com.netflix.${githubProjectName}" 

    tasks.withType(Test) { forkEvery = 1 }
    test {
        maxHeapSize = '2g' // or however much memory the tests need
        testLogging {
            events 'started', 'failed', 'passed', 'skipped'
            showStandardStreams  = true
        }

    }


    gradleLint {
        alwaysRun = false
        excludedRules = ['ospackage-remove-jdk11-configuration']
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = [
          "-language:experimental.macros",
          "-language:higherKinds",
          "-deprecation",
          '-target:jvm-1.7'
        ]
    }
}

project(':archaius-core') {

    dependencies {
        api 'commons-configuration:commons-configuration:1.8'
        api 'org.slf4j:slf4j-api:1.6.4'
        api 'com.google.guava:guava:16.0'
        api 'com.fasterxml.jackson.core:jackson-annotations:2.4.3'
        api 'com.fasterxml.jackson.core:jackson-core:2.4.3'
        api 'com.fasterxml.jackson.core:jackson-databind:2.4.3'
        testImplementation 'junit:junit:4.11'
        testImplementation 'org.slf4j:slf4j-simple:1.7.5'
        testImplementation 'org.apache.derby:derby:10.8.2.2'
        testImplementation 'org.apache.commons:commons-io:1.3.2'
        testImplementation 'org.mockito:mockito-all:1.9.5'
        testImplementation files('src/test/resources/classpathTestResources.jar')

    }
}

project(':archaius-aws') {
    dependencies {
        api project(':archaius-core')
        api 'com.amazonaws:aws-java-sdk-core:1.9.3'
        api 'com.amazonaws:aws-java-sdk-dynamodb:1.9.3'
        api 'com.amazonaws:aws-java-sdk-s3:1.9.3'
        testImplementation 'junit:junit:4.11'
        testImplementation 'org.mockito:mockito-all:1.9.5'
        testImplementation 'org.slf4j:slf4j-simple:1.6.4'
    }
}

//project(':archaius-jclouds') {
//    dependencies {
//        compile project(':archaius-core')
//        compile 'org.jclouds:jclouds-blobstore:1.6.0'
//        testCompile 'junit:junit:4.11'
//        testCompile 'org.slf4j:slf4j-simple:1.6.4'
//    }
//}

project(':archaius-typesafe') {
    dependencies {
        api project(':archaius-core')
        api 'com.typesafe:config:1.2.1'
        testImplementation 'junit:junit:4.11'
        testImplementation 'org.slf4j:slf4j-simple:1.6.4'
    }
}

project(':archaius-zookeeper') {
    dependencies {
        api project(':archaius-core')
        api ('org.apache.zookeeper:zookeeper:3.4.5') {
            exclude group: 'com.sun.jdmk', module: 'jmxtools'
            exclude group: 'com.sun.jmx', module: 'jmxri'
            exclude group: 'javax.jms', module: 'jms'
        }
        api 'org.apache.curator:curator-client:2.3.0'
        api 'org.apache.curator:curator-recipes:2.3.0'
        testImplementation 'junit:junit:4.11'
        testImplementation 'org.slf4j:slf4j-simple:1.6.4'
        testImplementation 'org.apache.curator:curator-test:2.3.0'
    }
}

project(':archaius-etcd') {

    dependencies {
        api project(':archaius-core')
        api 'com.google.guava:guava:19.0'
        api 'io.fastjson:etcd-client:0.33'
        testImplementation 'junit:junit:4.11'
        testImplementation 'org.mockito:mockito-all:1.9.5'
        testImplementation 'org.slf4j:slf4j-simple:1.6.4'
    }
}

//project(':archaius-scala') {
//    apply plugin: 'scala'
//
//    dependencies {
//        implementation project(':archaius-core')
//        implementation 'org.scala-lang:scala-library:2.10.4'
//        testImplementation 'org.scalatest:scalatest_2.10:2.2.5'
//        testImplementation 'junit:junit:4.11'
//
//        implementation "org.scala-lang.modules:scala-java8-compat_2.10:0.9.0"
//
//        compileOnly "org.scala-lang:scala-reflect:2.10.4"
//        compileOnly "org.scala-lang:scala-compiler:2.10.4"
//    }
//}
//
//project(':archaius-samplelibrary') {
//    apply plugin: 'scala'
//
//    dependencies {
//        implementation project(':archaius-scala')
//
//        implementation 'org.slf4j:slf4j-api:1.6.4'
//        implementation 'org.scala-lang:scala-library:2.10.1'
//
//        testImplementation 'org.scalatest:scalatest_2.10.0:1.8'
//        testImplementation 'junit:junit:4.11'
//    }
//    jar {
//        from('src/main/java') {
//            include 'META-INF/conf/springbeans.xml'
//            include 'META-INF/conf/config.properties'
//        }
//    }
//}
